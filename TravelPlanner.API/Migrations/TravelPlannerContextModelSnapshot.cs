// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelPlanner.API.Data;

namespace TravelPlanner.API.Migrations
{
    [DbContext(typeof(TravelPlannerContext))]
    partial class TravelPlannerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TravelPlanner.API.DomainModels.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("TravelPlanner.API.DomainModels.FromTo", b =>
                {
                    b.Property<int>("FromToID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FromCityCityID")
                        .HasColumnType("int");

                    b.Property<int?>("ToCityCityID")
                        .HasColumnType("int");

                    b.HasKey("FromToID");

                    b.HasIndex("FromCityCityID");

                    b.HasIndex("ToCityCityID");

                    b.ToTable("FromTo");
                });

            modelBuilder.Entity("TravelPlanner.API.DomainModels.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArrivalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToWhere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderID");

                    b.ToTable("OrderedTickets");
                });

            modelBuilder.Entity("TravelPlanner.API.DomainModels.Travel", b =>
                {
                    b.Property<int>("TravelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnName("Arrival_Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnName("Departure_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromToID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("TravelID");

                    b.HasIndex("FromToID");

                    b.ToTable("Travels");
                });

            modelBuilder.Entity("TravelPlanner.API.DomainModels.FromTo", b =>
                {
                    b.HasOne("TravelPlanner.API.DomainModels.City", "FromCity")
                        .WithMany()
                        .HasForeignKey("FromCityCityID");

                    b.HasOne("TravelPlanner.API.DomainModels.City", "ToCity")
                        .WithMany()
                        .HasForeignKey("ToCityCityID");
                });

            modelBuilder.Entity("TravelPlanner.API.DomainModels.Travel", b =>
                {
                    b.HasOne("TravelPlanner.API.DomainModels.FromTo", null)
                        .WithMany("Travels")
                        .HasForeignKey("FromToID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
